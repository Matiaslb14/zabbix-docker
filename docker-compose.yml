services:
  postgres:
    image: postgres:16
    container_name: zbx-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  zabbix-server:
    image: zabbix/zabbix-server-pgsql:alpine-7.0-latest
    container_name: zbx-server
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_SERVER_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "10051:10051"
    volumes:
      - zbx_alertscripts:/usr/lib/zabbix/alertscripts
      - zbx_export:/var/lib/zabbix/export
      - zbx_modules:/var/lib/zabbix/modules
      - zbx_enc:/var/lib/zabbix/enc
      - zbx_snmptraps:/var/lib/zabbix/snmptraps

  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:alpine-7.0-latest
    container_name: zbx-web
    restart: unless-stopped
    depends_on:
      zabbix-server:
        condition: service_started
    environment:
      DB_SERVER_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ZBX_SERVER_HOST: zabbix-server
      PHP_TZ: ${PHP_TZ}
    ports:
      - "8080:8080"   # UI http://localhost:8080
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O- http://localhost:8080 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  zabbix-agent2:
    image: zabbix/zabbix-agent2:alpine-7.0-latest
    container_name: zbx-agent2
    restart: unless-stopped
    depends_on:
      zabbix-server:
        condition: service_started
    environment:
      ZBX_SERVER_HOST: zabbix-server
      ZBX_HOSTNAME: docker-agent
    volumes:
      - /:/hostfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      # No montar /proc (rompe AppArmor)
    pid: "host"
    privileged: true
    security_opt:
      - apparmor:unconfined
    ports:
      - "10050:10050"
    # Para m√©tricas de contenedores Docker, descomenta:
    # volumes:
    #   - /var/run/docker.sock:/var/run/docker.sock
    # environment:
    #   ZBX_ENABLEMODULE_DOCKER: "true"
    #   ZBX_DOCKER_SOCKET: "/var/run/docker.sock"

volumes:
  db_data:
  zbx_alertscripts:
  zbx_export:
  zbx_modules:
  zbx_enc:
  zbx_snmptraps:
